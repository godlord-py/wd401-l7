name: CI/CD Pipeline

# Define the events 
on:
  push:
    branches:
      - main  # Trigger pipeline on push to main branch
  pull_request:
    branches:
      - main  # Trigger pipeline on pull requests to main branch

jobs:
  build-and-test:
    runs-on: ubuntu-latest  # Specify the operating system to use for the runner

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v2  # Use the actions/checkout action to fetch the repository code

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2  # Use the actions/setup-node action to set up Node.js
        with:
          node-version: '14'  # Specify the Node.js version to use
    
      # Step 3: Install frontend dependencies
      - name: Install frontend dependencies
        run: |
          npm install  

      # Step 4: Install backend dependencies
      - name: Install backend dependencies
        run: |
          cd backend 
          npm install  

      # Step 5: Build Docker image for the frontend
      - name: Build frontend Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/sportnewsapp-frontend:latest -f Dockerfile.frontend .

      # Step 6: Build Docker image for the backend
      - name: Build backend Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/sportnewsapp-backend:latest -f backend/Dockerfile .  

      # Step 7: Authenticate with Docker Hub
      - name: Docker login
        uses: docker/login-action@v2  # Use the docker/login-action to authenticate with Docker Hub
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Use Docker username from secrets
          password: ${{ secrets.DOCKER_PASSWORD }}  # Use Docker password from secrets

      # Step 8: Push frontend Docker image to Docker Hub
      - name: Push frontend Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/sportnewsapp-frontend:latest  

      # Step 9: Push backend Docker image to Docker Hub
      - name: Push backend Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/sportnewsapp-backend:latest  

       # Step 10: Install Cypress and run tests
      - name: Install Cypress and run tests
        run: |
         npm install cypress
            npm run cy:run  

      # Step to notify on failure
      - name: Notify on failure using Discord webhook
        if: failure()
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"content":"Error occurred in SPORTNEWSAPP pipeline: Latest Commit Pipeline, please fix the error as soon as possible."}' $DISCORD_WEBHOOK_URL

      # Step to notify on success
      - name: Notify on success using Discord webhook
        if: success()
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"content":"SPORTNEWSAPP pipeline completed successfully: No errors detected."}' $DISCORD_WEBHOOK_URL

  deploy-to-github-pages:
    runs-on: ubuntu-latest
    needs: build-and-test  

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Node.js 
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      # Install dependencies and build 
      - name: Install dependencies and build
        run: |
          npm install
          npm run build 

      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.TOKEN }}
          publish_dir: ./dist 
          publish_branch: gh-pages
          force_orphan: true


